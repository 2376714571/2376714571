{"meta":{"title":"黑剑客与剑","subtitle":"","description":"","author":"John Doe","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"我的博客","slug":"我的博客","date":"2020-06-23T04:10:30.000Z","updated":"2020-06-23T05:38:59.162Z","comments":true,"path":"2020/06/23/我的博客/","link":"","permalink":"http://yoursite.com/2020/06/23/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/","excerpt":"12345678910 import time,loggingfrom selenium import webdriverfrom selenium.webdriver.common.by import Byfrom selenium.webdriver.support.ui import WebDriverWaitfrom selenium.webdriver.support import expected_conditions as ECdef get_driver(): chromedriver = r\"C:\\Program Files (x86)\\Google\\Chrome\\Application\\chromedriver.exe\" driver = webdriver.Chrome(chromedriver) return driver","text":"12345678910 import time,loggingfrom selenium import webdriverfrom selenium.webdriver.common.by import Byfrom selenium.webdriver.support.ui import WebDriverWaitfrom selenium.webdriver.support import expected_conditions as ECdef get_driver(): chromedriver = r\"C:\\Program Files (x86)\\Google\\Chrome\\Application\\chromedriver.exe\" driver = webdriver.Chrome(chromedriver) return driver login_qq(driver, login_page, username, password):12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061 driver.get(login_page) iframe &#x3D; driver.find_element_by_xpath(&quot;&#x2F;&#x2F;iframe[@id]&quot;) driver.switch_to.frame(iframe) try: WebDriverWait(driver, 5).until( EC.element_to_be_clickable((By.ID, &quot;switcher_plogin&quot;)) ) except Exception as e: logging.exception(e) pass driver.find_element_by_id(&quot;switcher_plogin&quot;).click() # 切换到qq登录输入框 # 用户名 username_input &#x3D; driver.find_element_by_id(&quot;u&quot;) username_input.clear() username_input.send_keys(username) # 密码 password_input &#x3D; driver.find_element_by_id(&quot;p&quot;) password_input.clear() password_input.send_keys(password) before_url &#x3D; driver.current_url # 记录地址栏url # 点击登录 driver.find_element_by_id(&quot;login_button&quot;).click() time.sleep(2) if driver.current_url &#x3D;&#x3D; before_url: # 如果url没有改变,则判定登录失败 # 登录不成功 print(&quot;登录失败,正在重试&quot;) login_qq(driver, login_page,username,password) return &quot;seccess&quot;def like_music(driver,music_page): driver.get(music_page) driver.switch_to.frame(&#39;g_iframe&#39;) time.sleep(2) while True: comments &#x3D; driver.find_element_by_id(&#39;comment-box&#39;).find_elements_by_css_selector(&#39;.itm&#39;) #获取所有评论item元素 for item in comments: try: target &#x3D; driver.find_element_by_xpath(&#39;&#x2F;&#x2F;a[@data-type&#x3D;&quot;like&quot;]&#39;) #筛选出未点赞的元素 driver.execute_script(&quot;arguments[0].scrollIntoView();&quot;, target) #拖动到可见的元素处 target.click() #点赞 time.sleep(0.4) except Exception as e: logging.exception(e) pass next_btn&#x3D;driver.find_element_by_link_text(&quot;下一页&quot;) # 评论翻页 if &quot;disable&quot; in next_btn.get_attribute(&quot;class&quot;): #判断class属性中是否包含disabled字段 print(&quot;点赞完毕&quot;) break next_btn.click() time.sleep(1) return &quot;over&quot;login_page&#x3D;&quot;https:&#x2F;&#x2F;graph.qq.com&#x2F;oauth&#x2F;show?which&#x3D;Login&amp;display&#x3D;pc&amp;client_id&#x3D;100495085&amp;response_type&#x3D;code&amp;redirect_uri&#x3D;https:&#x2F;&#x2F;music.163.com&#x2F;back&#x2F;qq&amp;forcelogin&#x3D;true&amp;state&#x3D;ZwKHpxUoam&quot;driver &#x3D; get_driver()try: login_qq(driver, login_page, &quot;qq_username&quot;, &quot;qq_password&quot;) #登录except Exception as e: logging.exception(e) passdriver.refresh()music_page&#x3D;&quot;http:&#x2F;&#x2F;music.163.com&#x2F;#&#x2F;song?id&#x3D;32358440&quot;like_music(driver,music_page) #点赞","categories":[],"tags":[],"author":"John Doe"}],"categories":[],"tags":[]}